{
    "name": "example",
    "version": "0.0.1",
    "description": "Demo of bazel rules for angular",
    "license": "Apache 2.0",
    "engines": {
        "node": ">=10.9.0 <11.0.0",
        "yarn": ">=1.9.2 <2.0.0"
    },
    "dependencies": {
        "@angular/http": "^7.1.0",
        "@angular/platform-browser": "^7.1.0",
        "@ngrx/store": "6.1.0",
        "angular-in-memory-web-api": "^0.6.1",
        "rxjs": "6.3.3",
        "systemjs": "0.21.5",
        "tslib": "1.9.3",
        "zone.js": "0.8.26"
    },
    "devDependencies": {
        "@angular/animations": "7.0.4",
        "@angular/bazel": "7.0.4",
        "@angular/cdk": "7.0.4",
        "@angular/common": "7.0.4",
        "@angular/compiler": "7.0.4",
        "@angular/compiler-cli": "7.0.4",
        "@angular/core": "7.0.4",
        "@angular/material": "7.0.4",
        "@bazel/bazel": "0.19.1",
        "@bazel/benchmark-runner": "0.1.0",
        "@bazel/ibazel": "0.5.0",
        "@bazel/karma": "0.20.3",
        "@bazel/typescript": "0.20.3",
        "@types/jasmine": "3.3.0",
        "@types/node": "6.0.117",
        "clang-format": "1.2.4",
        "husky": "0.14.3",
        "protractor": "5.4.1",
        "typescript": "3.1.1"
    },
    "scripts": {
        "build": "bazel build //src:bundle",
        "serve": "ibazel run //src:devserver",
        "serve-prod": "bazel run //src:prodserver",
        "e2e": "bazel test //e2e:all",
        "test": "bazel test //src/...",
        "benchmark": "ibazel-benchmark-runner //src:devserver src/hello-world/hello-world.component.ts --url=http://localhost:5432",
        "postinstall": "ngc -p postinstall.tsconfig.json",
        "prebuildifier": "bazel build @com_github_bazelbuild_buildtools//buildifier",
        "//": "note: working around https://github.com/alexeagle/angular-bazel-example/issues/60",
        "buildifier": "find . -type f \\( -name BUILD -or -name BUILD.bazel \\) ! -path \"./node_modules/*\" | xargs $(bazel info bazel-bin)/external/com_github_bazelbuild_buildtools/buildifier/*/buildifier",
        "format": "git-clang-format",
        "precommit": "check-clang-format \"yarn format\""
    }
}
